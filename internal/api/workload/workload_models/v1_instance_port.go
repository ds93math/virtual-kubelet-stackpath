// Code generated by go-swagger; DO NOT EDIT.

package workload_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1InstancePort A named port for an instance of a workload
//
// swagger:model v1InstancePort
type V1InstancePort struct {

	// Allow the internet to connect to the port
	//
	// When true, this port will be given an implicit network policy of priority 65534 permitting 0.0.0.0/0 access to the port. This can be overridden by creating network policies of a higher priority to block the port.
	EnableImplicitNetworkPolicy bool `json:"enableImplicitNetworkPolicy,omitempty"`

	// The network port
	Port int32 `json:"port,omitempty"`

	// The network protocol for the port
	//
	// Values are either "TCP" or "UDP". Defaults to "TCP".
	Protocol string `json:"protocol,omitempty"`
}

// Validate validates this v1 instance port
func (m *V1InstancePort) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v1 instance port based on context it is used
func (m *V1InstancePort) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1InstancePort) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1InstancePort) UnmarshalBinary(b []byte) error {
	var res V1InstancePort
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
